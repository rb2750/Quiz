@page "{handler?}"
@using Microsoft.AspNetCore.Html
@model EditModel
@{
    ViewData["Title"] = "Edit " + Model.quiz?.Name ?? "Quiz"; //Default to quiz if there wasn't a quiz found for this ID
}

@{
    /**
     * Render a card with buttons for the specified type and existing value.
     *
     * Types: Question, Answer (case sensitive)
     */
    Func<Tuple<string, string>, IHtmlContent> RenderCard =
        @<div class='list-group-item text-left p-3 d-flex justify-content-between'>
            <input class='form-control' value='@(item.Item2)'/>
            <div class='my-auto d-flex flex-row'>
                <a id='move-@(item.Item1)-up' href='#' class='text-primary mr-2'>
                    <i class='fas fa-chevron-up fa-fw'></i>
                </a>
                <a id='move-@(item.Item1)-down' href='#' class='text-primary mr-2'>
                    <i class='fas fa-chevron-down fa-fw'></i>
                </a>
                <a id='add-@(item.Item1)' href='#' class='text-success mr-2'>
                    <i class='fas fa-plus fa-fw'></i>
                </a>
                <a id='remove-@(item.Item1)' href='#' class='text-danger'>
                    <i class='fas fa-trash-alt fa-fw'></i>
                </a>
            </div>
        </div>;
}

@if (Model.quiz == null)
{
    <h1 class="display-4 text-center">Quiz not found</h1>
}
else
{
    <h1 class="display-4 text-center">Edit Quiz "@Model.quiz.Name"</h1>

    <div id="question-list" class="text-left">
        <div class="text-right w-100 mb-3">
            <a id="save-quiz" href="#" class="btn btn-success">Save</a>
            <a href="/" class="btn btn-danger">Cancel</a>
        </div>
        <div id="question-container">
            @if (Model.quiz.Questions.Count > 0)
            {
                @foreach (var question in Model.quiz.Questions.OrderBy(q => q.Order))
                {
                    <div class="list-group">
                        @RenderCard(Tuple.Create("Question", question.Question))
                        <div id="answer-container">
                            @foreach (var answer in question.Answers.OrderBy(a => a.Order))
                            {
                                @RenderCard(Tuple.Create("Answer", answer.Answer))
                            }
                        </div>
                    </div>
                }
            }
            else
            {
                <div class="list-group">
                    @RenderCard(Tuple.Create("Question", "Question"))
                    <div id="answer-container">
                        @RenderCard(Tuple.Create("Answer", "Answer"))
                    </div>
                </div>
            }
        </div>
    </div>
}

@Html.AntiForgeryToken()

@section Scripts{
    <script>
        document.addEventListener('DOMContentLoaded', () => new Quiz.EditQuiz());
    </script>
}